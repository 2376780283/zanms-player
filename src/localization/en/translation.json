{
  "_comment": "src/localization/en/translation.json",
  "appDrawer": {
    "homeScreenName": "Home",
    "exploreScreenName": "Discover",
    "settingScreenName": "Settings",
    "LoginName": "User Login"
  },
  "Dialog": {
    "ok": "Done",
    "cancel": "Cancel"
  },
  "CopiedPlaylistDialog": {
    "title": "Send {{title}} to..."
  },
  "NewPlaylistDialog": {
    "title": "Create {{fromList.title}} as New Playlist...",
    "titleNew": "Create New Playlist...",
    "label": "Playlist name"
  },
  "PlaylistSettingsDialog": {
    "playlistNameLabel": "Playlist Name",
    "subscribeUrlLabel": "Subscribe URL",
    "blacklistedUrlLabel": "Banned BVIDs",
    "useBiliShazamLabel": "Use BiliShazam",
    "useBiliSyncLabel": "BiliSync as favorite"
  },
  "RenameSongDialog": {
    "title": "Remame {{song.name}} to...",
    "label": "Song name"
  },
  "PlaylistsDrawer": {
    "SearchListTitle": "Search",
    "SearchListTitleNA": "MISSINGNO."
  },
  "BiliSearchBar": {
    "label": "Bilibili URL"
  },
  "PlaylistSearchBar": {
    "label": "Search"
  },
  "PlaylistOperations": {
    "updating": "Now updating {{playlist.title}}'s subscriptions...",
    "updated": "Playlist {{playlist.title}} updated",
    "reloading": "Now reloading {{playlist.title}}'s BVIDs...",
    "reloaded": "Playlist {{playlist.title}} is reset",
    "cleaning": "Now cleaning broken BVIDs in {{playlist.title}}...",
    "cleaned": "Playlist {{playlist.title}} broken links are cleaned",
    "bilishazaming": "Now shazaming {{playlist.title}}...",
    "bilishazamed": "Playlist {{playlist.title}} shazamed",
    "bilisyncing": "Now syncing {{playlist.title}} to Bilibili...",
    "bilisynced": "Playlist {{playlist.title}} synced",
    "clearListTitle": "Clear {{playlist.title}}?",
    "clearListMsg": "Are you sure to clear playlist {{playlist.title}}?",
    "deleteListTitle": "Delete {{playlist.title}}?",
    "deleteListMsg": "Are you sure to delete playlist {{playlist.title}}?",
    "resetListTitle": "Reload {{playlist.title}}?",
    "resetListMsg": "Are you sure to reload all BVIDs in  playlist {{playlist.title}}?",
    "resetting": "Now reloading {{playlist.title}}'s BVIDs...",
    "reset": "Playlist {{playlist.title}} is reset",
    "playlistSettingsTitle": "Settings...",
    "playlistSendToTitle": "Send to...",
    "bilishazamTitle": "BiliShazam",
    "bilisyncTitle": "BiliSync",
    "analyticsTitle": "Analytics",
    "removeBrokenTitle": "Remove Broken",
    "reloadBVIDTitle": "Reload Bvids",
    "clearPlaylistTitle": "Clear",
    "removePlaylistTitle": "Remove",
    "all": "All",
    "searchListName": "Search"
  },
  "SongOperations": {
    "songSendToTitle": "Send to...",
    "songRenameTitle": "Rename...",
    "songSearchInPlaylistTitle": "Search in Playlist",
    "songStartRadio": "Start Radio",
    "songR128gain": "R128Gain",
    "songRemoveTitle": "Remove",
    "songRemoveNBanTitle": "Remove and BAN",
    "selectedSongs": "Selected songs"
  },
  "GeneralSettings": {
    "autoRSSUpdateName": "Daily auto RSS update",
    "autoRSSUpdateDesc": "Automatically update playlist's subscriptions daily when opened.",
    "parseSongNameName": "Parse song name",
    "parseSongNameDesc": "Show automatically parsed song names in playlist.",
    "keepSearchedSongListWhenPlayingName": "Play searched results",
    "keepSearchedSongListWhenPlayingDesc": "When searching in a playlist, play the seached results.",
    "hideCoverInMobileName": "Hide album cover",
    "hideCoverInMobileDesc": "Hide the album cover.",
    "dataSaverName": "Data Saver",
    "dataSaverDesc": "TODO: Render low quality assets to save data.",
    "noCookieBiliSearchName": "Bilibili Customized Search",
    "noCookieBiliSearchDesc": "TODO: Enable credentials in bilibili search to show customized searchresults",
    "updateLoadedTrackName": "Update Track Metadata",
    "updateLoadedTrackDesc": "Always retrieve the track metadata regardless of cache status",
    "r128gainName": "R128gain OTF",
    "r128gainDesc": "Enable on-the-fly R128gain (only works when cache is enabled)",
    "fastBiliSearchName": "Fast Bilibili Search",
    "fastBiliSearchDesc": "Do not search for bilibili video episodes."
  },
  "DeveloperSettings": {
    "LogName": "Show logs",
    "LogDesc": "Show the current logs.",
    "LogLevelName": "Log Level",
    "LogLevelDesc": "set Log Level.",
    "VersionCheckName": "Check Version",
    "VersionCheckDesc": "Check latest version released on github.",
    "noInterruptionName": "No Interruption",
    "noInterruptionDesc": "Disables Event.RemoteDuck to prevent interruption (NEED RESTART)",
    "CacheSizeName": "Max Cached Song Size",
    "CacheSizeDesc": "Disables Event.RemoteDuck to prevent interruption (NEED RESTART)",
    "CacheSizeDesc2": "Currently set to hold a max of {{val}} songs in cache (NEED RESTART).",
    "ClearCacheName": "Clear Cache",
    "ClearCacheDesc": "Clear all cached songs.",
    "ClearCacheDesc2": "Clear all cached {{val}} songs.",
    "ClearOrphanedCacheName": "Clear Orphaned Cache",
    "ClearOrphanedCacheDesc": "Clear all cached songs.",
    "ClearOrphanedCacheDesc2": "Clear all orphaned cached {{val}} songs.",
    "LogLevel0": "DEBUG",
    "LogLevel1": "INFO",
    "LogLevel2": "WARN",
    "LogLevel3": "ERROR",
    "LogLevel4": "CRITICAL",
    "LogLevel5": "OFF"
  },
  "Settings": {
    "GeneralSettingName": "General Settings",
    "GeneralSettingDesc": "General APM settings",
    "SkinSettingName": "Skins",
    "SkinSettingDesc": "Change APM skin",
    "BackupSettingName": "Playlist Backup",
    "BackupSettingDesc": "Backup APM playlists via Dropbox",
    "InfoSettingName": "About",
    "InfoSettingDesc": "About APM",
    "SplashSettingName": "Splashes",
    "SplashSettingDesc": "View APM's splash ads",
    "DeveloperOptionsName": "Developer Options",
    "DeveloperOptionsDesc": "Experimental Options in pre-release versions of APM",
    "LanguageOptionsName": "Change Language",
    "LanguageOptionsDesc": "Change app language",
    "LanguageOptionsTitle": "Change Language",
    "LoginName": "Bilibili Login",
    "LoginDesc": "login to bilibili",
    "FeatureNotImplemented": "Feature not implemented"
  },
  "Sync": {
    "Local": "Local",
    "Dropbox": "Dropbox",
    "Gitee": "Gitee",
    "PersonalCloud": "Personal Cloud",
    "ExportLocation": "Select Sync:",
    "DropboxUploadSuccess": "APM playlists synced to Dropbox!",
    "DropboxUploadFail": "APM playlists failed to sync 2 dropbox",
    "DropboxUploadFailSnackbar": "APM playlists failed to sync to Dropbox!",
    "DropboxDownloadSuccess": "APM playlists synced from dropbox!",
    "DropboxDownloadFail": "APM playlists DNE on dropbox",
    "DropboxDownloadFailSnackbar": "APM playlists failed to sync from dropbox",
    "PersonalCloudUploadSuccess": "歌单上传到PersonalCloud成功！",
    "PersonalCloudUploadFail": "云端歌单不存在",
    "PersonalCloudUploadFailSnackbar": "歌单上传到PersonalCloud失败，错误记录在控制台里",
    "PersonalCloudDownloadSuccess": "歌单同步自PersonalCloud成功！",
    "PersonalCloudDownloadFail": "云端歌单不存在",
    "PersonalCloudDownloadFailSnackbar": "歌单同步到PersonalCloud失败，错误记录在控制台里",
    "personalCloudIPPlaceholder": "end with forward slash /",
    "personalCloudIPLabel": "Private cloud IP address",
    "personalCloudKeyPlaceholder": "",
    "personalCloudKeyLabel": "Private cloud key",
    "fileNotValidJson": "selected backup file is corrupted.",
    "NoxExtensionImportTitle": "noxplayer format detected",
    "NoxExtensionImportMsg": "How do you want to import playlists from noxplayer?",
    "Sync.NoxExtensionOverwrite": "Overwrite",
    "Sync.NoxExtensionAppend": "Append",
    "Sync.NoxExtensionCancel": "Cancel"
  },
  "SleepTimer": {
    "Title": "Sleep Timer"
  },
  "Login": {
    "BilibiliNotLoggedIn": "User not logged in\n",
    "BilibiliLoginButton": "QR log in",
    "BilibiliCookieInputButton": "Manually input cookies",
    "BilibiliCookieInputDialogTitle": "Add Bili Cookies",
    "BilibiliLoginQRGeneration": "Generating QR code...",
    "BilibiliLoginQRGenerated": "Scan QR code in Bilibili app to login",
    "BilibiliLoginQRGenerateFailed": "Bilibili QR code generation failed. Please check network.",
    "BilibiliLoginQRExpired": "Bilibili QR code expired. Regenerate to login.",
    "BilibiliLoginProbeFailed": "Checking QR code login status failed. Please check network.",
    "Disclaimer": "Using bilibili cookies in this app may make your account BANNED due to API abuse. At the very least please don't use your main account."
  },
  "VersionUpdate": {
    "NoUpdates": "Noxplayer is already at the newest version.\nCurrent version:{{currentVersion}}\nDev version: {{devVersion}}",
    "UpdateCheckingSnackbar": "Checking updates...",
    "UpdateCheckingFailedSnackbar": "Checking update via github failed.",
    "UpdateFoundTitle": "New update found!",
    "UpdateFoundContent": "Noxplayer version {{noxCheckedVersion}} is released. Go to gtihub to dowenload.\nCurrent version:{{currentVersion}}\nDev version: {{devVersion}}",
    "UpdatedVersionAlertTitle": "Noxplayer updated!",
    "UpdatedVersionAlertContent": "Noxplayer updated to version {{version}}! Check out the release notes at github.",
    "UpdateGo2Github": "Go to Github"
  },
  "CustomSkin": {
    "SearchFailMsg": "Failed to load custom skin JSON file",
    "SearchBarLabel": "Custom skin JSON web address"
  },
  "About": {
    "Disclaimer1": "This project and its contents are not affiliated with, funded, authorized, endorsed by, or in any way associated with Bilibili Inc. or any of its affiliates and subsidiaries. (But we really want to, call us)",
    "Disclaimer2": "Any trademark, service mark, trade name, or other intellectual property rights used in this project are owned by the respective owners.",
    "About1": "APM is an open source software. You may find the source code of APM at github.com/lovegaoshi/azusa-player-mobile free of charge. Please consider adding your music stream cuts on bilibili via the video series list functionality with keywords to add videos into the series list automatically."
  },
  "AndroidAuto": {
    "PlaylistTab": "Playlists"
  }
}
